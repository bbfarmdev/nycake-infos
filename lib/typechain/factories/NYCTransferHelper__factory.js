"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NYCTransferHelper__factory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class NYCTransferHelper__factory extends contracts_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(routerAddress, overrides) {
        return super.deploy(routerAddress, overrides || {});
    }
    getDeployTransaction(routerAddress, overrides) {
        return super.getDeployTransaction(routerAddress, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.NYCTransferHelper__factory = NYCTransferHelper__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "routerAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
            },
        ],
        name: "buy",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506040516108e63803806108e68339818101604052602081101561003357600080fd5b5051600061003f6100ae565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b0319166001600160a01b03929092169190911790556100b2565b3390565b610825806100c16000396000f3fe60806040526004361061003f5760003560e01c8063715018a6146100445780638da5cb5b1461005b578063f088d5471461008c578063f2fde38b146100c4575b600080fd5b34801561005057600080fd5b506100596100f7565b005b34801561006757600080fd5b506100706101ab565b604080516001600160a01b039092168252519081900360200190f35b6100b2600480360360208110156100a257600080fd5b50356001600160a01b03166101ba565b60408051918252519081900360200190f35b3480156100d057600080fd5b50610059600480360360208110156100e757600080fd5b50356001600160a01b03166106bb565b6100ff6107c5565b6000546001600160a01b03908116911614610161576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60006101c46107c5565b6000546001600160a01b03908116911614610226576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60408051600280825260608083018452309386939192906020830190803683375050600154604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c464892506004808301926020929190829003018186803b15801561029057600080fd5b505afa1580156102a4573d6000803e3d6000fd5b505050506040513d60208110156102ba57600080fd5b5051815182906000906102c957fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084816001815181106102f757fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506000826001600160a01b03166370a08231856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561036657600080fd5b505afa15801561037a573d6000803e3d6000fd5b505050506040513d602081101561039057600080fd5b505160015460405163b6f9de9560e01b81526000600482018181526001600160a01b0389811660448501524260648501819052608060248601908152895160848701528951979850919095169563b6f9de959534958a948d94929390929160a40190602087810191028083838b5b838110156104165781810151838201526020016103fe565b50505050905001955050505050506000604051808303818588803b15801561043d57600080fd5b505af1158015610451573d6000803e3d6000fd5b5050505050600081846001600160a01b03166370a08231876040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104a657600080fd5b505afa1580156104ba573d6000803e3d6000fd5b505050506040513d60208110156104d057600080fd5b505103905060006001600160a01b0385166370a082316104ee6101ab565b6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d602081101561055557600080fd5b505190506001600160a01b03851663a9059cbb6105706101ab565b846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156105b757600080fd5b505af11580156105cb573d6000803e3d6000fd5b505050506040513d60208110156105e157600080fd5b505161062d576040805162461bcd60e51b81526020600482015260166024820152752a37b5b2b7103a3930b739b332b9103330b4b632b21760511b604482015290519081900360640190fd5b80856001600160a01b03166370a082316106456101ab565b6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561068257600080fd5b505afa158015610696573d6000803e3d6000fd5b505050506040513d60208110156106ac57600080fd5b50510398975050505050505050565b6106c36107c5565b6000546001600160a01b03908116911614610725576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661076a5760405162461bcd60e51b81526004018080602001828103825260268152602001806107ca6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220075a8c0b81bb7752fcdbc2b31f4d7b10522dfbb47b344a7ad5c7736942d74d4664736f6c634300060c0033";
//# sourceMappingURL=NYCTransferHelper__factory.js.map